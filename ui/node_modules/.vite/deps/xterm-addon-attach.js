import {
  __commonJS
} from "./chunk-J43GMYXM.js";

// node_modules/xterm-addon-attach/lib/xterm-addon-attach.js
var require_xterm_addon_attach = __commonJS({
  "node_modules/xterm-addon-attach/lib/xterm-addon-attach.js"(exports, module) {
    !function(t, e) {
      "object" == typeof exports && "object" == typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define([], e) : "object" == typeof exports ? exports.AttachAddon = e() : t.AttachAddon = e();
    }(window, function() {
      return function(t) {
        var e = {};
        function n(o) {
          if (e[o])
            return e[o].exports;
          var r = e[o] = { i: o, l: false, exports: {} };
          return t[o].call(r.exports, r, r.exports, n), r.l = true, r.exports;
        }
        return n.m = t, n.c = e, n.d = function(t2, e2, o) {
          n.o(t2, e2) || Object.defineProperty(t2, e2, { enumerable: true, get: o });
        }, n.r = function(t2) {
          "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t2, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(t2, "__esModule", { value: true });
        }, n.t = function(t2, e2) {
          if (1 & e2 && (t2 = n(t2)), 8 & e2)
            return t2;
          if (4 & e2 && "object" == typeof t2 && t2 && t2.__esModule)
            return t2;
          var o = /* @__PURE__ */ Object.create(null);
          if (n.r(o), Object.defineProperty(o, "default", { enumerable: true, value: t2 }), 2 & e2 && "string" != typeof t2)
            for (var r in t2)
              n.d(o, r, function(e3) {
                return t2[e3];
              }.bind(null, r));
          return o;
        }, n.n = function(t2) {
          var e2 = t2 && t2.__esModule ? function() {
            return t2.default;
          } : function() {
            return t2;
          };
          return n.d(e2, "a", e2), e2;
        }, n.o = function(t2, e2) {
          return Object.prototype.hasOwnProperty.call(t2, e2);
        }, n.p = "", n(n.s = 0);
      }([function(t, e, n) {
        "use strict";
        Object.defineProperty(e, "__esModule", { value: true }), e.AttachAddon = void 0;
        var o = function() {
          function t2(t3, e2) {
            this._disposables = [], this._socket = t3, this._socket.binaryType = "arraybuffer", this._bidirectional = !e2 || false !== e2.bidirectional;
          }
          return t2.prototype.activate = function(t3) {
            var e2 = this;
            this._disposables.push(r(this._socket, "message", function(e3) {
              var n2 = e3.data;
              t3.write("string" == typeof n2 ? n2 : new Uint8Array(n2));
            })), this._bidirectional && (this._disposables.push(t3.onData(function(t4) {
              return e2._sendData(t4);
            })), this._disposables.push(t3.onBinary(function(t4) {
              return e2._sendBinary(t4);
            }))), this._disposables.push(r(this._socket, "close", function() {
              return e2.dispose();
            })), this._disposables.push(r(this._socket, "error", function() {
              return e2.dispose();
            }));
          }, t2.prototype.dispose = function() {
            this._disposables.forEach(function(t3) {
              return t3.dispose();
            });
          }, t2.prototype._sendData = function(t3) {
            1 === this._socket.readyState && this._socket.send(t3);
          }, t2.prototype._sendBinary = function(t3) {
            if (1 === this._socket.readyState) {
              for (var e2 = new Uint8Array(t3.length), n2 = 0; n2 < t3.length; ++n2)
                e2[n2] = 255 & t3.charCodeAt(n2);
              this._socket.send(e2);
            }
          }, t2;
        }();
        function r(t2, e2, n2) {
          return t2.addEventListener(e2, n2), { dispose: function() {
            n2 && t2.removeEventListener(e2, n2);
          } };
        }
        e.AttachAddon = o;
      }]);
    });
  }
});

// dep:xterm-addon-attach
var xterm_addon_attach_default = require_xterm_addon_attach();
export {
  xterm_addon_attach_default as default
};
//# sourceMappingURL=xterm-addon-attach.js.map
