{
  "version": 3,
  "sources": ["../../xterm-addon-attach/lib/webpack:/AttachAddon/webpack/universalModuleDefinition", "../../xterm-addon-attach/lib/webpack:/AttachAddon/webpack/bootstrap", "../../xterm-addon-attach/lib/webpack:/AttachAddon/src/AttachAddon.ts", "dep:xterm-addon-attach"],
  "sourcesContent": ["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AttachAddon\"] = factory();\n\telse\n\t\troot[\"AttachAddon\"] = factory();\n})(window, function() {\nreturn ", " \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n", "/**\n * Copyright (c) 2014, 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * Implements the attach method, that attaches the terminal to a WebSocket stream.\n */\n\nimport { Terminal, IDisposable, ITerminalAddon } from 'xterm';\n\ninterface IAttachOptions {\n  bidirectional?: boolean;\n}\n\nexport class AttachAddon implements ITerminalAddon {\n  private _socket: WebSocket;\n  private _bidirectional: boolean;\n  private _disposables: IDisposable[] = [];\n\n  constructor(socket: WebSocket, options?: IAttachOptions) {\n    this._socket = socket;\n    // always set binary type to arraybuffer, we do not handle blobs\n    this._socket.binaryType = 'arraybuffer';\n    this._bidirectional = (options && options.bidirectional === false) ? false : true;\n  }\n\n  public activate(terminal: Terminal): void {\n    this._disposables.push(\n      addSocketListener(this._socket, 'message', ev => {\n        const data: ArrayBuffer | string = ev.data;\n        terminal.write(typeof data === 'string' ? data : new Uint8Array(data));\n      })\n    );\n\n    if (this._bidirectional) {\n      this._disposables.push(terminal.onData(data => this._sendData(data)));\n      this._disposables.push(terminal.onBinary(data => this._sendBinary(data)));\n    }\n\n    this._disposables.push(addSocketListener(this._socket, 'close', () => this.dispose()));\n    this._disposables.push(addSocketListener(this._socket, 'error', () => this.dispose()));\n  }\n\n  public dispose(): void {\n    this._disposables.forEach(d => d.dispose());\n  }\n\n  private _sendData(data: string): void {\n    // TODO: do something better than just swallowing\n    // the data if the socket is not in a working condition\n    if (this._socket.readyState !== 1) {\n      return;\n    }\n    this._socket.send(data);\n  }\n\n  private _sendBinary(data: string): void {\n    if (this._socket.readyState !== 1) {\n      return;\n    }\n    const buffer = new Uint8Array(data.length);\n    for (let i = 0; i < data.length; ++i) {\n      buffer[i] = data.charCodeAt(i) & 255;\n    }\n    this._socket.send(buffer);\n  }\n}\n\nfunction addSocketListener<K extends keyof WebSocketEventMap>(socket: WebSocket, type: K, handler: (this: WebSocket, ev: WebSocketEventMap[K]) => any): IDisposable {\n  socket.addEventListener(type, handler);\n  return {\n    dispose: () => {\n      if (!handler) {\n        // Already disposed\n        return;\n      }\n      socket.removeEventListener(type, handler);\n    }\n  };\n}\n", "export default require(\"./node_modules/xterm-addon-attach/lib/xterm-addon-attach.js\");"],
  "mappings": ";;;;;;;KAAA,SAA2CA,GAAMC,GAAAA;AAC1B,kBAAA,OAAZC,WAA0C,YAAA,OAAXC,SACxCA,OAAOD,UAAUD,EAAAA,IACQ,cAAA,OAAXG,UAAyBA,OAAOC,MAC9CD,OAAO,CAAA,GAAIH,CAAAA,IACe,YAAA,OAAZC,UACdA,QAAqB,cAAID,EAAAA,IAEzBD,EAAkB,cAAIC,EAAAA;IAAAA,EACrBK,QAAQ,WAAA;AACX,aAAA,SAAA,GAAA;ACTE,YAAIC,IAAmB,CAAA;AAGvB,iBAASC,EAAoBC,GAAAA;AAG5B,cAAGF,EAAiBE;AACnB,mBAAOF,EAAiBE,GAAUP;AAGnC,cAAIC,IAASI,EAAiBE,KAAY,EACzCC,GAAGD,GACHE,GAAAA,OACAT,SAAS,CAAA,EAAA;AAUV,iBANAU,EAAQH,GAAUI,KAAKV,EAAOD,SAASC,GAAQA,EAAOD,SAASM,CAAAA,GAG/DL,EAAOQ,IAAAA,MAGAR,EAAOD;QAAAA;AA0Df,eArDAM,EAAoBM,IAAIF,GAGxBJ,EAAoBO,IAAIR,GAGxBC,EAAoBQ,IAAI,SAASd,IAASe,IAAMC,GAAAA;AAC3CV,YAAoBW,EAAEjB,IAASe,EAAAA,KAClCG,OAAOC,eAAenB,IAASe,IAAM,EAAEK,YAAAA,MAAkBC,KAAKL,EAAAA,CAAAA;QAAAA,GAKhEV,EAAoBgB,IAAI,SAAStB,IAAAA;AACX,yBAAA,OAAXuB,UAA0BA,OAAOC,eAC1CN,OAAOC,eAAenB,IAASuB,OAAOC,aAAa,EAAEC,OAAO,SAAA,CAAA,GAE7DP,OAAOC,eAAenB,IAAS,cAAc,EAAEyB,OAAAA,KAAO,CAAA;QAAA,GAQvDnB,EAAoBoB,IAAI,SAASD,IAAOE,IAAAA;AAEvC,cADU,IAAPA,OAAUF,KAAQnB,EAAoBmB,EAAAA,IAC/B,IAAPE;AAAU,mBAAOF;AACpB,cAAW,IAAPE,MAA8B,YAAA,OAAVF,MAAsBA,MAASA,GAAMG;AAAY,mBAAOH;AAChF,cAAII,IAAKX,uBAAOY,OAAO,IAAA;AAGvB,cAFAxB,EAAoBgB,EAAEO,CAAAA,GACtBX,OAAOC,eAAeU,GAAI,WAAW,EAAET,YAAAA,MAAkBK,OAAOA,GAAAA,CAAAA,GACtD,IAAPE,MAA4B,YAAA,OAATF;AAAmB,qBAAQM,KAAON;AAAOnB,gBAAoBQ,EAAEe,GAAIE,GAAK,SAASA,IAAAA;AAAO,uBAAON,GAAMM;cAAAA,EAAQC,KAAK,MAAMD,CAAAA,CAAAA;AAC9I,iBAAOF;QAAAA,GAIRvB,EAAoB2B,IAAI,SAAShC,IAAAA;AAChC,cAAIe,KAASf,MAAUA,GAAO2B,aAC7B,WAAA;AAAwB,mBAAO3B,GAAgB;UAAA,IAC/C,WAAA;AAA8B,mBAAOA;UAAAA;AAEtC,iBADAK,EAAoBQ,EAAEE,IAAQ,KAAKA,EAAAA,GAC5BA;QAAAA,GAIRV,EAAoBW,IAAI,SAASiB,IAAQC,IAAAA;AAAY,iBAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,IAAQC,EAAAA;QAAAA,GAGzG7B,EAAoBgC,IAAI,IAIjBhC,EAAoBA,EAAoBiC,IAAI,CAAA;MAAA,EAAA,CAAA,SAAA,GAAA,GAAA,GAAA;AAAA;AAAA,eAAA,eAAA,GAAA,cAAA,EAAA,OAAA,KAAA,CAAA,GAAA,EAAA,cAAA;ACrErD,YAAA,IAAA,WAAA;AAKE,mBAAAb,GAAYc,IAAmBC,IAAAA;AAFvB,iBAAAC,eAA8B,CAAA,GAGpCC,KAAKC,UAAUJ,IAEfG,KAAKC,QAAQC,aAAa,eAC1BF,KAAKG,iBAAAA,CAAkBL,MAAAA,UAAWA,GAAQM;UAAAA;AA2C9C,iBAxCSrB,GAAA,UAAAsB,WAAP,SAAgBC,IAAAA;AAAhB,gBAAAC,KAAA;AACEP,iBAAKD,aAAaS,KAChBC,EAAkBT,KAAKC,SAAS,WAAW,SAAAS,IAAAA;AACzC,kBAAMC,KAA6BD,GAAGC;AACtCL,cAAAA,GAASM,MAAsB,YAAA,OAATD,KAAoBA,KAAO,IAAIE,WAAWF,EAAAA,CAAAA;YAAAA,CAAAA,CAAAA,GAIhEX,KAAKG,mBACPH,KAAKD,aAAaS,KAAKF,GAASQ,OAAO,SAAAH,IAAAA;AAAQ,qBAAAJ,GAAKQ,UAAUJ,EAAAA;YAAAA,CAAAA,CAAAA,GAC9DX,KAAKD,aAAaS,KAAKF,GAASU,SAAS,SAAAL,IAAAA;AAAQ,qBAAAJ,GAAKU,YAAYN,EAAAA;YAAAA,CAAAA,CAAAA,IAGpEX,KAAKD,aAAaS,KAAKC,EAAkBT,KAAKC,SAAS,SAAS,WAAA;AAAM,qBAAAM,GAAKW,QAAAA;YAAAA,CAAAA,CAAAA,GAC3ElB,KAAKD,aAAaS,KAAKC,EAAkBT,KAAKC,SAAS,SAAS,WAAA;AAAM,qBAAAM,GAAKW,QAAAA;YAAAA,CAAAA,CAAAA;UAAAA,GAGtEnC,GAAA,UAAAmC,UAAP,WAAA;AACElB,iBAAKD,aAAaoB,QAAQ,SAAAhD,IAAAA;AAAK,qBAAAA,GAAE+C,QAAAA;YAAAA,CAAAA;UAAAA,GAG3BnC,GAAA,UAAAgC,YAAR,SAAkBJ,IAAAA;AAGgB,kBAA5BX,KAAKC,QAAQmB,cAGjBpB,KAAKC,QAAQoB,KAAKV,EAAAA;UAAAA,GAGZ5B,GAAA,UAAAkC,cAAR,SAAoBN,IAAAA;AAClB,gBAAgC,MAA5BX,KAAKC,QAAQmB,YAAjB;AAIA,uBADME,KAAS,IAAIT,WAAWF,GAAKY,MAAAA,GAC1B1D,KAAI,GAAGA,KAAI8C,GAAKY,QAAAA,EAAU1D;AACjCyD,gBAAAA,GAAOzD,MAA0B,MAArB8C,GAAKa,WAAW3D,EAAAA;AAE9BmC,mBAAKC,QAAQoB,KAAKC,EAAAA;YAAAA;UAAAA,GAEtBvC;QAAA,EApDA;AAsDA,iBAAS0B,EAAqDZ,IAAmB4B,IAASC,IAAAA;AAExF,iBADA7B,GAAO8B,iBAAiBF,IAAMC,EAAAA,GACvB,EACLR,SAAS,WAAA;AACFQ,YAAAA,MAIL7B,GAAO+B,oBAAoBH,IAAMC,EAAAA;UAAAA,EAAAA;QAAAA;AA9D1B,UAAAG,cAAAA;MAAAA,CAAAA,CAAAA;IAAAA,CAAAA;;;;;ACbb,IAAO,6BAAQ;",
  "names": ["root", "factory", "exports", "module", "define", "amd", "window", "installedModules", "__webpack_require__", "moduleId", "i", "l", "modules", "call", "m", "c", "d", "name", "getter", "o", "Object", "defineProperty", "enumerable", "get", "r", "Symbol", "toStringTag", "value", "t", "mode", "__esModule", "ns", "create", "key", "bind", "n", "object", "property", "prototype", "hasOwnProperty", "p", "s", "socket", "options", "_disposables", "this", "_socket", "binaryType", "_bidirectional", "bidirectional", "activate", "terminal", "e", "push", "addSocketListener", "ev", "data", "write", "Uint8Array", "onData", "_sendData", "onBinary", "_sendBinary", "dispose", "forEach", "readyState", "send", "buffer", "length", "charCodeAt", "type", "handler", "addEventListener", "removeEventListener", "AttachAddon"]
}
